// all our subrojects share same settings here
subprojects {
	apply plugin: "java"
	apply plugin: "eclipse"
	apply plugin: "maven"
	sourceCompatibility = 1.6
	targetCompatibility = 1.6
	group = "com.redhat.qe.jon"
	version = "1.0.0-SNAPSHOT"

	eclipse {
		classpath {
			defaultOutputDir = file("bin")
		}
	}

	repositories {
		mavenCentral()
		mavenLocal()
		[
			"https://repository.jboss.org/nexus/content/repositories/thirdparty-uploads",
			"http://clojars.org/repo",
			"http://download.java.net/maven/2/",
			"http://repository.codehaus.org",
			"http://snapshots.repository.codehaus.org"
		].each { repo ->  
			maven {
				url repo
			}
		}
	}
  task test(dependsOn: "testClasses",overwrite:true) << {
    def workspace = System.getProperty("workspace.dir", System.getenv("WORKSPACE") ?: System.properties["user.dir"])
    def xmlSuite = "src/main/resources/testng.xml"
		if ( System.properties["testng.suite"] ) {
		  xmlSuite = System.properties["testng.suite"]
		}
    ant.taskdef( resource: 'testngtasks', classpath: project(":common").sourceSets.main.compileClasspath.asPath )
    ant.testng(
      classpath: sourceSets.main.runtimeClasspath.asPath, 
      listeners: "com.redhat.qe.auto.testng.TestNGListener,org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter",
      outputdir: "$buildDir/reports/tests",
      workingDir: "$buildDir"
    ) {
        xmlfileset(file: "${xmlSuite}")
        // we pass all system properties to testNG except line.sepatator
        // there's an issue that stacktraces are not output on new lines (only god knows why)
        for (def prop in System.properties) {
          if (prop.key.equals("line.separator")) {
            continue
          }
          else {
            sysproperty(key:prop.key,value:prop.value)
            }
        }
        // disable ReportNG escaping
        sysproperty(key:"org.uncommons.reportng.escape-output",value:"false")
    }
  }
	// we build/install also sources and javadocs to local mvn repo
	task sourcesJar (type: Jar, dependsOn:classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}
	task javadocJar (type: Jar, dependsOn:javadoc) {
		classifier = "javadoc"
		from javadoc.destinationDir
	}
	artifacts {
		archives sourcesJar
		archives javadocJar
	}
}
// project specific stuff
project(":clitest") {
	dependencies {
		compile project(":common")
		testCompile  project(":common")
	}
  task jsdoc() << {
    description "generates JSDoc for rhqapi.js"
    def jsdocDir = file("$buildDir/jsdoc/rhqapi")
    def toolkit = "jsdoc_toolkit-2.4.0"
    ant.mkdir(dir:"$jsdocDir")
    ant.get(src:"http://jsdoc-toolkit.googlecode.com/files/${toolkit}.zip",dest:"$buildDir",skipexisting:true)
    ant.unzip(src:"$buildDir/${toolkit}.zip",dest:"$buildDir")
    def toolkit_dir = "$buildDir/$toolkit/jsdoc-toolkit/"
    ant.java(jar:"${toolkit_dir}jsrun.jar",fork:true,dir:toolkit_dir,newenvironment:true,timeout:60000) {
      arg(value: "app/run.js")
    //  arg(value: "--allfunctions")
      arg(value: "--template=templates/jsdoc")
      arg(value: "--directory=$jsdocDir")
      arg(value: "--verbose")
      arg(value: "$projectDir/src/main/resources/js-files/rhqapi.js")
    }
  }
}
project(":sahi") {
	dependencies {
		compile project(":common"),
			"sahi:sahi:3.5"
		testCompile  project(":common")
	}

}
project(":rest-java") {
	dependencies {
		compile project(":common")
		testCompile  project(":common")
	}
}
project(":common") {
	dependencies {
		compile "com.redhat.qe:ssh-tools:1.0.0",
			"com.redhat.qe:assertions:1.0.2",
			"com.redhat.qe:testng-listeners:1.0.0",
			"com.redhat.qe:log-checker:1.0.0-SNAPSHOT",
			"org.jboss.as:jboss-as-controller-client:7.1.2.Final",
			"org.testng:testng:6.5.1",
			"com.google.inject:guice:3.0",
			"com.googlecode.json-simple:json-simple:1.1.1",
			"com.sun.jersey:jersey-client:1.13",
			"com.sun.jersey:jersey-core:1.13",
			"org.resteasy:jaxrs-api:1.0-beta-4",
			"org.uncommons:reportng:1.1.3",
			"org.apache.commons:commons-lang3:3.1",
			files("lib/cajo.jar", "lib/ReportEngineClient.jar")
	}

}
// rest-groovy project also uses "groovy" plugin
project(":rest-groovy") {
	apply plugin: "groovy"
	dependencies {
		groovy localGroovy()
		groovy group: "org.codehaus.groovy.modules.http-builder", name:"http-builder", version:"0.5.2"
		compile project(":common")
		testCompile  project(":common")
	}
}
/*project("cli-javapi") {
	repositories {
		maven {
			url "http://download.lab.bos.redhat.com/brewroot/repos/jboss-on-3-build/latest/maven/"
		}
	}
	dependencies {
		compile project(":common")
		compile module(group:"org.rhq", name :"rhq-enterprise-server", version:"4.4.0.JON311GA") {
       artifact { 
        name = "rhq-enterprise-server"
        extension = "jar"
        classifier = "client"
        type = "ejb-client"
      }
      transitive = true
    }
		compile (group:"org.rhq", name :"rhq-remoting-client-api", version:"4.4.0.JON311GA") {
      exclude module: "rhq-enterprise-server"
      transitive = true
    }
		compile (group:"org.rhq", name :"rhq-script-bindings", version:"4.4.0.JON311GA") {
      exclude module: "rhq-enterprise-server"
      transitive = true
    }
		compile "commons-configuration:commons-configuration:1.8",
    "oswego-concurrent:concurrent:1.3.4-jboss",
    "commons-configuration:commons-configuration:1.8",
		"org.apache.commons:commons-lang3:3.0"
	}
}
*/
task docs(type: Javadoc) {
	source subprojects.collect {project -> project.sourceSets.main.allJava } 
	classpath = files(subprojects.collect {project -> project.sourceSets.main.compileClasspath}) 
	destinationDir = new File("$buildDir/javadocs")
	options {
		group("SAHI ", ["com.redhat.qe.jon.sahi.base*","com.redhat.qe.jon.sahi.tasks"])
		group("CLI", ["com.redhat.qe.jon.clitest.base","com.redhat.qe.jon.clitest.tests","com.redhat.qe.jon.clitest.tasks"])
		group("REST", ["com.redhat.qe.jon.rest*"])
		group("Common", ["com.redhat.qe.jon.common*"])
		group("CLI EAP6 Tests", ["com.redhat.qe.jon.clitest.tests.plugins.eap6*"])
		group("SAHI Core Tests", ["com.redhat.qe.jon.sahi.tests"])
		group("SAHI EAP6 Tests", ["com.redhat.qe.jon.sahi.tests.plugins.eap6*"])
	}
    	title = "JON QE Automation API & tests"
}
